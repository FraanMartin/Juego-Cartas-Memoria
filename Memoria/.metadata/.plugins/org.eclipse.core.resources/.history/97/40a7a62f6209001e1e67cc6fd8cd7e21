package paquete;

import java.io.File;
import java.lang.reflect.Array;
import java.time.Instant;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.Random;
import java.util.Timer;

import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JTextField;

public class Tablero {
	private ArrayList<Carta> cartas;
	private String[] imagenes;
	private JFrame frmModoFacil;
	private static int relog = 0;
	private static JLabel contadorLabel;
	private static Timer timer;
	Instant tiempoInicial = Instant.now();
	private JLabel puntuacion;
	private JTextField textFieldTiempo;
	private int cont = 0;
	private JButton b1;
	private JButton b2;
	private JButton b3;
	private JButton b4;
	
	public Tablero(String dificultad) {
		obtenerImagenes();
		if(dificultad.equals("facil")) {
			//Construir cartas
			generarCartas(2);
			System.out.println("Modo facil");
		}else if(dificultad.equals("medio")) {
			//Construir cartas
			generarCartas(4);
		}else if(dificultad.equals("dificil")) {
			//Construir cartas
			generarCartas(6);
		}
	}
	
	public boolean cartasSonIguales(int posCarta1,int posCarta2) {
		if(cartas.get(posCarta1).getValor().equals(cartas.get(posCarta2).getValor())) {
			return true;
		}
		return false;
	}
	
	public void voltearCarta(int posCarta) {
		cartas.get(posCarta).voltear();
	}
	
	public ArrayList<Carta> getCartas() {
		return cartas;
	}

	private void generarCartas(int numeroCartas) {
		int[] seleccionImagenes = new int[numeroCartas];
		
		for(int i = 0;i < seleccionImagenes.length;i++) {
			seleccionImagenes[i] =  seleccionCartaAzar(seleccionImagenes,imagenes.length);
		}
		
		this.cartas = new ArrayList<Carta>();
		
		for(int i = 0;i < seleccionImagenes.length;i++) {
			cartas.add(new Carta(imagenes[seleccionImagenes[i]]));
			cartas.add(new Carta(imagenes[seleccionImagenes[i]]));
		}
		
		Collections.shuffle(cartas);
	}
	
	private void obtenerImagenes() {
		String ruta = (System.getProperty("user.dir"));
		File carpeta = new File(ruta);
		if(carpeta.isDirectory()) {
			imagenes = carpeta.list();
		}
	}
	
	private int seleccionCartaAzar(int[] valores,int numeroImagenes) {
		Random r = new Random();
		int valor = r.nextInt(numeroImagenes);
		if(Arrays.asList(valores).contains(valores)) {
			return  seleccionCartaAzar(valores,numeroImagenes);
		}
		return valor;
	}
	
	public void comprobacion() {
	    System.out.println(b1.getActionCommand());
	    System.out.println(b2.getActionCommand());
	    System.out.println(cont);

	    if (b1.getActionCommand().equals(b3.getActionCommand())) {
	        ImageIcon nuevaImagen = new ImageIcon(Vista.class.getResource("/imagenes/smalling1.png"));
	        b1.setIcon(nuevaImagen);
	        b3.setIcon(nuevaImagen);
	    } else {
	        Timer timer = new Timer(1000, new ActionListener()) {
	            @Override
	            public void actionPerformed(ActionEvent e) {
	                ImageIcon nuevaImagen = new ImageIcon(Vista.class.getResource("/imagenes/carta.jpg"));
	                b1.setIcon(nuevaImagen);
	                b2.setIcon(nuevaImagen);
	                b3.setIcon(nuevaImagen);
	                b4.setIcon(nuevaImagen);
	                frmModoFacil.repaint();
	                cont = 0;
	            }
	        timer.setRepeats(false);
	        timer.start();
	    }
	    }
	}


}

